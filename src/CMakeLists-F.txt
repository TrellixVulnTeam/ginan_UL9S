

add_library(pod_lib
	fortran/mdl_param.f95
	fortran/mdl_precision.f90
	fortran/mdl_arr.f90
	fortran/mdl_num.f90
	fortran/mdl_config.f95
	fortran/mdl_eop.f90
	fortran/mdl_planets.f90
	fortran/mdl_tides.f90
	fortran/m_matrixRxR.f95
	fortran/m_matrixinv.f95
	fortran/m_matrixreverse.f95
	fortran/m_matrixmerge.f95
	fortran/m_integrEQM.f95
	fortran/m_force_tides.f95
	fortran/m_tides_ocean.f95
	fortran/m_pd_geopotential.f95
	fortran/m_legendre.f95
	fortran/m_legendre1.f95
	fortran/m_legendre2.f95
	fortran/m_force_gfm.f95
	fortran/pd_forceZ.f95
	fortran/m_get_lambda.f
	fortran/m_shadow.f90
	fortran/m_pd_empirical.f95
	fortran/m_emp_init.f95
	fortran/m_pd_ECOM.f90
	fortran/m_pulses_init.f95
	fortran/m_pd_pulses.f95
	fortran/m_pulses_force.f95
	fortran/m_satinfo.f90
	fortran/m_pd_force.f95
	fortran/m_veq_rkn768.f95
	fortran/m_veqC2T.f95
	fortran/m_integrVEQ.f95
	fortran/m_betainfo.f90
	fortran/m_orbinteg.f95
	fortran/m_orb_estimator.f95
	fortran/m_orbC2T.f95
	fortran/m_orbT2C.f95
	fortran/m_statist.f95
	fortran/m_statdelta.f95
	fortran/m_orbinfo.f90
	fortran/m_statorbit.f95
	fortran/m_statorbit2.f95
	fortran/m_writearray.f95
	fortran/m_writearray2.f95
	fortran/m_write_orbres.f95
	fortran/m_orbresize.f95
	fortran/m_orbext.f95
	fortran/m_orbext2.f95
	fortran/m_gfc.f95
	fortran/m_gfc3.f95
	fortran/m_obsorbT2C.f95
	fortran/m_writedata.f95
	fortran/m_writeorbit.f95
	fortran/m_read_svsinex.f95
	fortran/m_read_satsnx.f95
	fortran/m_writeorbit_multi.f95
	fortran/m_write_prmfile_init.f95
	fortran/m_rso.f95
	fortran/m_sp3.f95
	fortran/m_sp3_PRN.f95
	fortran/m_lagrange.f95
	fortran/m_interporb.f95
	fortran/m_interporb_nom.f95
	fortran/m_interporb_filt.f95
	fortran/m_interpclocks.f95
	fortran/m_interpclock_nom.f95
	fortran/m_orb_outlier.f95
	fortran/m_eop_data.f95
	fortran/m_keplerorb.f95
	fortran/m_ecom_init.f95
	fortran/m_orbdet.f95
	fortran/m_orbitmain.f95
	fortran/m_orbitIC.f95
	fortran/m_attitude_orb.f95
	fortran/m_write_orbex.f95
	fortran/m_satmetadata.f95
	)

add_library(iau_math
	fortran/R3.for
	fortran/R1.for
	fortran/jd2cal.for
	fortran/cal2jd.for
	fortran/fad03.for
	fortran/faf03.for
	fortran/fal03.for
	fortran/fama03.for
	fortran/fane03.for 
	fortran/fapa03.for
	fortran/faur03.for
	fortran/fae03.for 
	fortran/faju03.for
	fortran/falp03.for
	fortran/fame03.for
	fortran/faom03.for
	fortran/fasa03.for
	fortran/fave03.for
	fortran/xy06.for
	fortran/s06.for
	fortran/c2ixys.for
	fortran/xys00a.for
	fortran/pnm00a.for
	fortran/bpn2xy.for
	fortran/s00.for
	fortran/pn00a.for
	fortran/nut00a.for
	fortran/pn00.for
	fortran/pr00.for
	fortran/obl80.for
	fortran/bp00.for
	fortran/numat.for
	fortran/bi00.for
	fortran/ir.for
	fortran/rz.for
	fortran/ry.for
	fortran/rx.for
	fortran/anp.for
	fortran/era00.for
	fortran/gmst00.for
	fortran/gmst06.for
	fortran/sp00.for
	fortran/pom00.for
	fortran/taiutc.for
	fortran/rxr.for
	fortran/tr.for
	fortran/cr.for
	fortran/cp.for
	)
   
add_library(iers
	fortran/ORTHO_EOP.F
	fortran/CNMTX.F
	fortran/UTLIBR.F
	fortran/PMSDNUT2.F
	fortran/FUNDARG.F
	fortran/RG_ZONT2.F
	)

#ga_math library requires LAPACK as m_matrixinv uses it
add_library(ga_math
	fortran/m_matrixRxR.f95
	fortran/m_matrixinv.f95
	fortran/m_matrixreverse.f95
	fortran/m_matrixmerge.f95
	fortran/matrix_inv3.f90
	fortran/matrix_Rr.f90
	fortran/matrix_RxR.f90
	fortran/productdot.f90
	fortran/productcross.f90
	fortran/arctan.f90
	fortran/STATE.f90
	fortran/PLEPH.f
	fortran/CONST.f
	fortran/SPLIT.f
	fortran/INTERP.f
	fortran/FSIZER3.f
	fortran/interp_lin.f90
	)

add_library(ga_tz
	fortran/time_TT.f90
	fortran/time_GPS.f90
	fortran/time_UTC.f90
	fortran/time_TAI.f90
	fortran/time_GPSweek.f90
	fortran/time_GPSweek2.f90
	fortran/time_GPSweek3.f90
	fortran/time_TT_sec.f90
	)

add_library(boxwing
	fortran/BOXWINIT.f90
	fortran/ERPFBOXW.f90
	fortran/SURFBOXW.f90
	fortran/PROPBOXW.f90
	fortran/SRPFBOXW.f90
	)

add_library(tides
	fortran/tides_solid1.f90
	fortran/tides_solid2.f90
	fortran/tide_perm.f90
	fortran/tides_fes2004.f90
	fortran/tide_pole_se.f90
	fortran/tide_pole_oc.f90
	)

add_library(ga_gen
	fortran/doy2str.f95
	fortran/f90getopt.F90
	fortran/read_cmdline.f95
	)

add_library(rw_param
	fortran/write_prmfile_init0.f95
	fortran/writeparam.f95
	fortran/writeparam1.f95
	fortran/write_prmfile.f95
	fortran/write_prmfile2.f95
	fortran/readparam.f95 
	fortran/prm_main.f95
	fortran/prm_emp.f95
	fortran/prm_srp.f95
	fortran/prm_grav.f95
	fortran/prm_gravity.f95
	fortran/prm_nongrav.f95
	fortran/prm_ocean.f95
	fortran/prm_orbext.f95
	fortran/prm_planets.f95
	fortran/prm_pseudobs.f95
	)

add_library(force
	fortran/force_gm.f90
	fortran/force_gm3rd.f90
	fortran/force_srp.f90
	fortran/force_erp.f90
	fortran/force_ant.f90
	fortran/force_sum.f95
	fortran/apr_srp.f90
	)

add_library(rel
	fortran/rel_schwarzschild.f90
	fortran/rel_LenseThirring.f90
	fortran/rel_deSitter.f90
	)

add_library(rk
	fortran/integr_rkn768.f95
	fortran/integr_rk87.f95
	fortran/integr_rk4.f95
	)

add_library(yaw
	fortran/yaw_nom.f90
	fortran/yaw_angle.f90
	fortran/yaw_attitude.f90
	fortran/yaw_bds.f90
	fortran/yaw_gal.f90
	fortran/yaw_gal_iov.f95
	fortran/yaw_gal_foc.f95
	fortran/yawdyn.f90
	fortran/att_matrix.f95
	fortran/mat2quater.f95
	fortran/yaw_gal_foc_nom.f95
	fortran/yaw_pred.f95
	fortran/colinearity_angle.f95
	fortran/colinear_pred.f95
	)

add_library(eop
	fortran/EOP.f90
	fortran/eop_rd.f90
	fortran/eop_c04.f90
	fortran/m_eop_cor.f95
	fortran/m_eop_igu.f95
	fortran/eop_finals2000A.f90
	fortran/erp_igu.f90
	)

add_library(kepler
	fortran/kepler_eq.f90
	fortran/kepler_k2z.f90
	fortran/kepler_z2k.f90
	)

add_library(eclipse
	fortran/eclips.f
	fortran/eclips2017.f
	fortran/eclips201707.f
	fortran/eclipse_integstep.f95
	)

add_library(yaml
	fortran/yaml_types.F90
	fortran/yaml_version.F90
	fortran/yaml_settings.F90
	fortran/yaml.F90
	fortran/m_pod_yaml.F90
	fortran/fthread.c
	)

add_executable(pod
	fortran/report.f90
	fortran/gmst_iers.f95
	fortran/interp_iers.f
	fortran/IERS_CMP_2015.F
	fortran/m_read_leapsec.f95
	fortran/m_clock_read.f95
	fortran/m_write_orb2sp3.f95
	fortran/m_pod_gnss.f95
	fortran/gblinit.f95
	fortran/coord_r2sph.f90
	fortran/crs_trs.f90
	fortran/erp_igu.f90
	fortran/era_matrix.f90
	fortran/orb_frame.f90
	fortran/orb_frame2_unit.f90
	fortran/crf_bff.f90
	fortran/GM_de.f90
	fortran/CATfile.f90
	fortran/asc2eph.f90
	fortran/indirectJ2.f90
	fortran/delaunay.f90
	fortran/prn_shift.f95
	fortran/surfprop.f90
	fortran/scan0orb.f95
	fortran/empirical_init.f95
	fortran/empirical_cor.f95
	fortran/beta_angle.f90
	fortran/beta_pred.f90
	fortran/attitude.f95
	fortran/pd_gm.f95
	fortran/pd_forceZ.f95
	fortran/main_pod.f95
	)

add_executable(crs2trs
	fortran/report.f90
	fortran/coord_r2sph.f90
	fortran/interp_iers.f
	fortran/crs_trs.f90
	fortran/main_crs2trs.f95
	)

add_executable(brdc2ecef
	fortran/report.f90
	fortran/m_read_leapsec.f95
	fortran/asc2eph.f90
	fortran/brdc2ecef.f90
	fortran/brdc_cmdline.f95
	fortran/brdc_qc_gal.f90
	fortran/brdc_qc_gps.f90
	fortran/CATfile.f90
	fortran/chkbrdc.f90
	fortran/crs_trs.f90
	fortran/reformbrdc.f90
	fortran/glnacc.f90
	fortran/glnorbint.f90
	fortran/m_antoffset.f90
	fortran/mdl_brdconfig.f95
	fortran/m_meanstd.f90
	fortran/m_write_brd2sp3.f95
	fortran/m_write_orb2sp3.f95
	fortran/prn2str.f95
	fortran/prn_shift_brdc.f95
	fortran/readbrdcheader.f95
	fortran/readbrdcmessg.f90
	fortran/main_brdcorbit.f90
	)

add_executable(timesystem
	fortran/mdl_timeconfig.f95
	fortran/time_cmdline.f95
	fortran/main_time.f95
	)

add_executable(test_yaml
	fortran/test_yaml.F90
	)

	
target_include_directories(pod PUBLIC
	.
	fortran/
	${LAPACK_INCLUDE_DIRS}
	${BLAS_INCLUDE_DIRS})

#must get all the modules built first to build all the other libraries - so make everything depend on pod_lib & yaml ...
target_link_libraries(rw_param 	PUBLIC pod_lib	yaml)
target_link_libraries(force 	PUBLIC pod_lib	yaml)
target_link_libraries(eop 		PUBLIC pod_lib	yaml)
target_link_libraries(yaw 		PUBLIC pod_lib	yaml)
target_link_libraries(tides 	PUBLIC pod_lib	yaml)
target_link_libraries(ga_tz 	PUBLIC pod_lib	yaml)
target_link_libraries(rk 		PUBLIC pod_lib	yaml)
target_link_libraries(ga_math 	PUBLIC pod_lib	yaml)
target_link_libraries(iau_math 	PUBLIC pod_lib	yaml)
target_link_libraries(ga_gen 	PUBLIC pod_lib	yaml)
target_link_libraries(boxwing 	PUBLIC pod_lib	yaml)
target_link_libraries(kepler 	PUBLIC pod_lib	yaml)
target_link_libraries(rel 		PUBLIC pod_lib	yaml)
target_link_libraries(eclipse 	PUBLIC pod_lib	yaml)
target_link_libraries(pod_lib 	PUBLIC 			yaml)

# must have pod_lib first to get all the modules. As rw_param requires pod_lib it must be listed again after that. 
# rk and force depend on eop and boxwing and must precede them in the list, likewise yaw must precede eclipse
target_link_libraries(pod 			PUBLIC pod_lib rw_param pod_lib rel kepler yaw eclipse tides ga_tz rk force eop boxwing ga_math ga_gen iers iau_math yaml ${LAPACK_LIBRARIES} ${BLAS_LIBRARIES} ${CMAKE_THREAD_LIBS_INIT})
target_link_libraries(crs2trs 		PUBLIC pod_lib rw_param pod_lib ga_tz rk force eop boxwing ga_math	ga_gen iers iau_math yaml 	${CMAKE_THREAD_LIBS_INIT})
target_link_libraries(brdc2ecef 	PUBLIC pod_lib rw_param pod_lib ga_tz rk force eop boxwing ga_math	ga_gen iers iau_math yaml 	${CMAKE_THREAD_LIBS_INIT})
target_link_libraries(timesystem 	PUBLIC pod_lib rw_param pod_lib ga_tz rk force eop boxwing ga_math	ga_gen iers iau_math 	${CMAKE_THREAD_LIBS_INIT})
target_link_libraries(test_yaml     PUBLIC																ga_gen		iau_math yaml iau_math	${CMAKE_THREAD_LIBS_INIT}) 

set_target_properties(pod 			PROPERTIES LINKER_LANGUAGE Fortran)
set_target_properties(crs2trs 		PROPERTIES LINKER_LANGUAGE Fortran)
set_target_properties(brdc2ecef 	PROPERTIES LINKER_LANGUAGE Fortran)
set_target_properties(timesystem 	PROPERTIES LINKER_LANGUAGE Fortran)
set_target_properties(test_yaml 	PROPERTIES LINKER_LANGUAGE Fortran)

if (OpenMP_Fortran_FOUND)
	target_link_libraries(pod PUBLIC OpenMP::OpenMP_Fortran)
endif()

target_compile_definitions(pod 			PRIVATE LAPACK BLAS)
target_compile_definitions(crs2trs 		PRIVATE)
target_compile_definitions(brdc2ecef 	PRIVATE)
target_compile_definitions(timesystem 	PRIVATE)
target_compile_definitions(test_yaml 	PRIVATE)
